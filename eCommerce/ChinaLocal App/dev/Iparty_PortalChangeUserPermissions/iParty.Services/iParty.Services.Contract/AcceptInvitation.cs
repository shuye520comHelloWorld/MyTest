using iParty.Services.Entity;
using ServiceStack;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace iParty.Services.Contract
{


    [Api(" a customer accepts the invitation of a  party.")]
    [Route("/parties/invitations", "POST, OPTIONS")]
    public sealed class AcceptInvitation : CommandRequestDto, IReturn<InvitationCommandResponse>, IPublicRequestDto
    {
        [ApiMember(Name = "InvitationToken", ParameterType = "body", Description = "the InvitationToken", DataType = "string", IsRequired = true)]
        public string InvitationToken { get; set; }
        [ApiMember(Name = "Name", ParameterType = "body", Description = "the full name of the customer", DataType = "string", IsRequired = true)]
        public String Name { get; set; }
        [ApiMember(Name = "PhoneNumber", ParameterType = "body", Description = "the mobile phone number of the customer", DataType = "string", IsRequired = true)]
        public String PhoneNumber { get; set; }
        [ApiMember(Name = "Career", ParameterType = "body", Description = "the career of the customer", DataType = "enum", IsRequired = false)]
        public Career? Career { get; set; }
        [ApiMember(Name = "Age", ParameterType = "body", Description = "the age range of the customer", DataType = "enum", IsRequired = false)]
        public AgeRange? Age { get; set; }
        [ApiMember(Name = "MaritalStatus", ParameterType = "body", Description = "the marital status of the customer", DataType = "enum", IsRequired = false)]
        public MaritalStatusType? MaritalStatus { get; set; }
        [ApiMember(Name = "ReferenceBy", ParameterType = "body", Description = "who forwarded the invitation ", DataType = "string", IsRequired = false)]
        public string ReferenceBy { get; set; }
        [ApiMember(Name = "UnionId", ParameterType = "body", Description = "the union id of a customer", DataType = "string", IsRequired = false)]
        public string UnionId { get; set; }
        [ApiMember(Name = "IsOnSite", ParameterType = "body", Description = "whether the registration is on site", DataType = "boolean", IsRequired = false)]
        public bool? IsOnSite { get; set; }
    }

    public sealed class InvitationCommandResponse : CommandResponseDto
    {
        public Guid InvitationKey { get; set; }
        public Guid CustomerKey { get; set; }
        public String Name { get; set; }
        public String PhoneNumber { get; set; }
        public Career? Career { get; set; }
        public AgeRange? Age { get; set; }
        public bool IsVIP { get; set; }
        public MaritalStatusType? MaritalStatus { get; set; }
        /// <summary>
        /// generated by PartyKey, CustomerKey,InvitaitonKey
        /// </summary>
        public string InvationQRKey { get; set; }
    }
}
